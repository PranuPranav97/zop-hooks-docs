"use strict";(self.webpackChunkzop_hooks_docs=self.webpackChunkzop_hooks_docs||[]).push([[3911],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),d=o,m=p["".concat(l,".").concat(d)]||p[d]||h[d]||a;return r?n.createElement(m,s(s({ref:t},u),{},{components:r})):n.createElement(m,s({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2129:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={},s="useShortcuts",i={unversionedId:"useShortcuts",id:"useShortcuts",isDocsHomePage:!1,title:"useShortcuts",description:"The useShortcuts hook provides an easy way to detect and respond to custom keyboard shortcuts in your React application. It listens for a specified combination of keys and executes a callback function when the combination is triggered.",source:"@site/docs/useShortcuts.md",sourceDirName:".",slug:"/useShortcuts",permalink:"/zop-hooks-docs/docs/useShortcuts",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/useShortcuts.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useScrollPosition",permalink:"/zop-hooks-docs/docs/useScrollPosition"},next:{title:"useWindowScroll",permalink:"/zop-hooks-docs/docs/useWindowScroll"}},l=[{value:"Features",id:"features",children:[]},{value:"Basic Example",id:"basic-example",children:[]},{value:"Complex Example",id:"complex-example",children:[{value:"API",id:"api",children:[]},{value:"Key Behavior",id:"key-behavior",children:[]},{value:"Troubleshooting",id:"troubleshooting",children:[]},{value:"Testing Your Shortcuts",id:"testing-your-shortcuts",children:[]}]}],c={toc:l},u="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"useshortcuts"},(0,o.kt)("inlineCode",{parentName:"h1"},"useShortcuts")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useShortcuts")," hook provides an easy way to detect and respond to custom keyboard shortcuts in your React application. It listens for a specified combination of keys and executes a callback function when the combination is triggered."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Detects key combinations (e.g., ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+S"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"Shift+Alt+X"),")."),(0,o.kt)("li",{parentName:"ul"},"Case-insensitive key matching."),(0,o.kt)("li",{parentName:"ul"},"Prevents default browser behavior for custom shortcuts."),(0,o.kt)("li",{parentName:"ul"},"Cleans up event listeners and internal state on component unmount."),(0,o.kt)("li",{parentName:"ul"},"Works seamlessly with React functional components.")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"basic-example"},"Basic Example"),(0,o.kt)("p",null,"Detect and respond to a Ctrl+S shortcut:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import React from "react";\nimport { useShortcuts, KeyboardCharacter } from "zop-hooks";\n\nconst MyComponent = () => {\n  useShortcuts([KeyboardCharacter.Control, KeyboardCharacter.S], () => {\n    alert("Ctrl+S was pressed!");\n  });\n\n  return <div>Press Ctrl+S to save.</div>;\n};\n\nexport default MyComponent;\n')),(0,o.kt)("h2",{id:"complex-example"},"Complex Example"),(0,o.kt)("p",null,"Handling multiple shortcuts in the same component:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import React from "react";\nimport { useShortcuts, KeyboardCharacter } from "zop-hooks";\n\nconst MultiShortcutComponent = () => {\n  useShortcuts([KeyboardCharacter.Control, KeyboardCharacter.S], () => {\n    alert("Save triggered!");\n  });\n\n  useShortcuts([KeyboardCharacter.Control, KeyboardCharacter.P], () => {\n    alert("Print triggered!");\n  });\n\n  return (\n    <div>\n      <p>Press Ctrl+S to save.</p>\n      <p>Press Ctrl+P to print.</p>\n    </div>\n  );\n};\n\nexport default MultiShortcutComponent;\n')),(0,o.kt)("h3",{id:"api"},"API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"useShortcuts(KeyboardCharacter[]], callback);\n")),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"null"),": The hook does not return a value."),(0,o.kt)("h3",{id:"key-behavior"},"Key Behavior"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Key Matching: Detects keys regardless of case (e.g., Shift, SHIFT, shift are equivalent)."),(0,o.kt)("li",{parentName:"ol"},"Event Prevention: Uses event.preventDefault() to block default browser behavior for shortcuts like Ctrl+S."),(0,o.kt)("li",{parentName:"ol"},"State Management: Tracks active keys internally using a Set. Resets the state after the callback executes.")),(0,o.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h4",{id:"callback-not-triggering"},"Callback Not Triggering"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Ensure the keys array contains all required keys in the correct order."),(0,o.kt)("li",{parentName:"ol"},"Verify that the keys are correctly spelled (case-insensitivity applies).")),(0,o.kt)("h4",{id:"shortcut-conflict"},"Shortcut Conflict"),(0,o.kt)("p",null,"Browser shortcuts like Ctrl+S may interfere. useShortcuts prevents the default behavior, but conflicts might arise with other libraries or browser extensions."),(0,o.kt)("h4",{id:"missing-cleanup"},"Missing Cleanup"),(0,o.kt)("p",null,"Ensure the component using useShortcuts unmounts properly. The hook automatically cleans up event listeners."),(0,o.kt)("h3",{id:"testing-your-shortcuts"},"Testing Your Shortcuts"),(0,o.kt)("p",null,"To verify your shortcuts, add a ",(0,o.kt)("inlineCode",{parentName:"p"},"console.log")," inside the callback function to confirm detection:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'useShortcuts(["Shift", "A"], () => {\n  console.log("Shift+A detected");\n});\n')))}p.isMDXComponent=!0}}]);