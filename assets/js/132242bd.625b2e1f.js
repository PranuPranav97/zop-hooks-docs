"use strict";(self.webpackChunkzop_hooks_docs=self.webpackChunkzop_hooks_docs||[]).push([[5606],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=u(n),d=o,h=l["".concat(p,".").concat(d)]||l[d]||m[d]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[l]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2639:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={custom_edit_url:"https://github.com/PranuPranav97/zop-hooks-docs"},i=void 0,s={unversionedId:"usePageTimer",id:"usePageTimer",isDocsHomePage:!1,title:"usePageTimer",description:"usePageTimer",source:"@site/docs/usePageTimer.md",sourceDirName:".",slug:"/usePageTimer",permalink:"/zop-hooks-docs/docs/usePageTimer",editUrl:"https://github.com/PranuPranav97/zop-hooks-docs",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/PranuPranav97/zop-hooks-docs"},sidebar:"tutorialSidebar",previous:{title:"useOnlineStatus",permalink:"/zop-hooks-docs/docs/useOnlineStatus"},next:{title:"useScreenBrightness",permalink:"/zop-hooks-docs/docs/useScreenBrightness"}},p=[{value:"usePageTimer",id:"usepagetimer",children:[{value:"Usage",id:"usage",children:[]},{value:"Example",id:"example",children:[]}]}],u={toc:p},c="wrapper";function l(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"usepagetimer"},"usePageTimer"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"usePageTimer")," hook is a custom React hook that allows you to measure the time spent on a page. It returns the amount of time in seconds that has elapsed since the component using the hook was mounted."),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("p",null,"To use the ",(0,o.kt)("inlineCode",{parentName:"p"},"usePageTimer")," hook, follow these steps:"),(0,o.kt)("p",null,"Import the hook:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { usePageTimer } from "zop-hooks";\n')),(0,o.kt)("p",null,"Use the hooks in your component like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import React from "react";\nimport { usePageTimer } from "./usePageTimer";\n\nfunction MyComponent() {\n  const timeSpent = usePageTimer();\n\n  // Render the time spent on the page\n  return <div>Time spent: {timeSpent} seconds</div>;\n}\n')),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import React from "react";\nimport { usePageTimer } from "./usePageTimer";\n\nfunction MyComponent() {\n  const timeSpent = usePageTimer();\n\n  return <div>Time spent on this page: {timeSpent} seconds</div>;\n}\n')),(0,o.kt)("p",null,"In this example, the ",(0,o.kt)("inlineCode",{parentName:"p"},"timeSpent")," value returned by the ",(0,o.kt)("inlineCode",{parentName:"p"},"usePageTimer")," hook is rendered in a ",(0,o.kt)("inlineCode",{parentName:"p"},"div")," element to display the time spent on the page."),(0,o.kt)("p",null,"That's it! You can now use the ",(0,o.kt)("inlineCode",{parentName:"p"},"usePageTimer")," hook to measure the time spent on a page in your React components."))}l.isMDXComponent=!0}}]);