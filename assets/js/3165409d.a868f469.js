"use strict";(self.webpackChunkzop_hooks_docs=self.webpackChunkzop_hooks_docs||[]).push([[451],{3905:(e,o,t)=>{t.d(o,{Zo:()=>l,kt:()=>h});var n=t(7294);function s(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function i(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?i(Object(t),!0).forEach((function(o){s(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function a(e,o){if(null==e)return{};var t,n,s=function(e,o){if(null==e)return{};var t,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],o.indexOf(t)>=0||(s[t]=e[t]);return s}(e,o);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var u=n.createContext({}),p=function(e){var o=n.useContext(u),t=o;return e&&(t="function"==typeof e?e(o):r(r({},o),e)),t},l=function(e){var o=p(e.components);return n.createElement(u.Provider,{value:o},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},d=n.forwardRef((function(e,o){var t=e.components,s=e.mdxType,i=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),c=p(t),d=s,h=c["".concat(u,".").concat(d)]||c[d]||m[d]||i;return t?n.createElement(h,r(r({ref:o},l),{},{components:t})):n.createElement(h,r({ref:o},l))}));function h(e,o){var t=arguments,s=o&&o.mdxType;if("string"==typeof e||s){var i=t.length,r=new Array(i);r[0]=d;var a={};for(var u in o)hasOwnProperty.call(o,u)&&(a[u]=o[u]);a.originalType=e,a[c]="string"==typeof e?e:s,r[1]=a;for(var p=2;p<i;p++)r[p]=t[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6457:(e,o,t)=>{t.r(o),t.d(o,{contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var n=t(7462),s=(t(7294),t(3905));const i={custom_edit_url:"https://github.com/PranuPranav97/zop-hooks-docs"},r=void 0,a={unversionedId:"Hooks/useMousePosition",id:"Hooks/useMousePosition",isDocsHomePage:!1,title:"useMousePosition",description:"useMousePosition",source:"@site/docs/Hooks/useMousePosition.md",sourceDirName:"Hooks",slug:"/Hooks/useMousePosition",permalink:"/zop-hooks-docs/docs/Hooks/useMousePosition",editUrl:"https://github.com/PranuPranav97/zop-hooks-docs",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/PranuPranav97/zop-hooks-docs"},sidebar:"tutorialSidebar",previous:{title:"useKeyPress",permalink:"/zop-hooks-docs/docs/Hooks/useKeyPress"},next:{title:"useOnlineStatus",permalink:"/zop-hooks-docs/docs/Hooks/useOnlineStatus"}},u=[{value:"useMousePosition",id:"usemouseposition",children:[{value:"Usage",id:"usage",children:[]},{value:"Example",id:"example",children:[]},{value:"Implementation Details",id:"implementation-details",children:[]}]}],p={toc:u},l="wrapper";function c(e){let{components:o,...t}=e;return(0,s.kt)(l,(0,n.Z)({},p,t,{components:o,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"usemouseposition"},"useMousePosition"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"useMousePosition")," hook is a custom React hook that allows you to track the current position of the mouse cursor on the screen."),(0,s.kt)("h3",{id:"usage"},"Usage"),(0,s.kt)("p",null,"To use the ",(0,s.kt)("inlineCode",{parentName:"p"},"useMousePosition")," hook, follow these steps:"),(0,s.kt)("p",null,"Import the hook into your React component:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { useMousePosition } from "zop-hooks";\n')),(0,s.kt)("p",null,"Invoke the hook in your functional component:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const mousePosition = useMousePosition();\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"mousePosition")," object will contain the current coordinates of the mouse cursor."),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("p",null,"Here's an example of how you can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"useMousePosition")," hook in a React component:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import React from "react";\nimport { useMousePosition } from "zop-hooks";\n\nfunction MousePositionComponent() {\n  const mousePosition = useMousePosition();\n\n  return (\n    <div>\n      <p>Mouse X: {mousePosition.x}</p>\n      <p>Mouse Y: {mousePosition.y}</p>\n    </div>\n  );\n}\n\nexport default MousePositionComponent;\n')),(0,s.kt)("p",null,"In the above example, the MousePositionComponent component uses the ",(0,s.kt)("inlineCode",{parentName:"p"},"useMousePosition")," hook to track the mouse position and display it on the screen."),(0,s.kt)("h3",{id:"implementation-details"},"Implementation Details"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"useMousePosition")," hook internally uses React's useState and ",(0,s.kt)("inlineCode",{parentName:"p"},"useEffect")," hooks. It initializes the ",(0,s.kt)("inlineCode",{parentName:"p"},"mousePosition")," state to { x: 0, y: 0 } and updates it whenever the mouse moves."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"useEffect")," hook is used to add an event listener to the mousemove event on the window object. The event listener updates the ",(0,s.kt)("inlineCode",{parentName:"p"},"mousePosition")," state with the current mouse coordinates (e.clientX and e.clientY)."),(0,s.kt)("p",null,"To clean up the event listener when the component unmounts or the hook dependencies change, the ",(0,s.kt)("inlineCode",{parentName:"p"},"useEffect")," hook returns a cleanup function that removes the event listener."),(0,s.kt)("p",null,"Please note that this documentation assumes you have a basic understanding of React and React hooks. If you're new to React or hooks, it's recommended to read the official React documentation for more information."))}c.isMDXComponent=!0}}]);